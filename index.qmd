---
title: "TopoStats : An open-software and FAIR4RS success"
format: 
    revealjs: 
        smaller: true
        slide-number: true
        theme: dark
        scrollable: false
        embed-resources: true
---

## Who am I?
::::{.columns}
:::{.column}
* Sylvia Whittle
* Research Technician / Software Engineer
* Background in Physics
* Somehow now in a biolab?
* Part of the Pyne Lab research group, based in the Royce Discovery centre in Sheffield
* I like advocating for open software and research
* (Hopefully) starting PhD in October
:::
:::{.column}
![](afm_image.jpg){width=65%}
:::
::::

## What is TopoStats? 
:::: {.columns}
::: {.column width="30%"}
![Raw data](before.png){width=90%}
:::
::: {.column width="30%"}
![Flattened](after_no_border.png){width=90%}
:::
::: {.column width="30%"}
![Grains detected](after_with_mask_no_border.png){width=90%}
:::
::::

:::: {.columns}
::: {.column width="50%"}
* Python toolkit for automated processing of atomic force microscopy (AFM) data.
* Free and open-source research software
* Developed by a small team at the University of Sheffield
:::
::: {.column width="50%"}
* Takes raw noisy, non-flat images
* Flattens them
* Detects structures in the data
* Calculates statistics for the structures
:::
::::

## TopoStats: A year ago
:::: {.columns}
::: {.column width="50%"}
* Very hard to install
* Outdated dependencies
* Contributing was a mess
* Hard-coded values
:::
::: {.column width="50%"}
* No versioning, no releases
* No review process
* No tests
* Buggy!
:::
This meant that working on TopoStats was confusing, difficult and prone to errors and lost data / scripts

**Hardly anyone used or knew about it**
::::

## Dependencies
:::: {.columns}
::: {.column width="50%"}
Gwyddion

* AFM analysis software
* Written in C++ 
* Almost no code comments
* Slow to use (GUI only)
* No automation
* No standardisation
* Near impossible to contribute to / edit 
:::
::: {.column width="50%"}
PyGwy

* Python binding to Gwyddion's methods and functions.
* Written in outdated Python 2.7
* Will *not* be updated
* Lacking in documentation
* Difficult to contribute to
:::
::::


## March 2022: Installation procedure
:::{.fragment .fade-in}
### Install software
:::{.incremental}
* Uninstall all python, gwydidon, pygobject, pycairo, pygtk installations
* Delete all caches of the above softwares
* Install Anaconda 32 bit
* Install python 2.7
* Install pycharm (register for an account if necessary)
* Install Gwyddion (From an unfamiliar website)
* Download a set of additional files from Google drive, hosted by our lab
:::
:::

## March 2022: Installation procedure
:::{.fragment .fade-in}
### Set up the environment
:::{.incremental}
* Import the environment from the gwyconda.yml file. 
* Follow some images to determine which checkboxes to select.
* Locate your python environment
* Install the PyGTK2 packages:
    - Install PyGTK
    - Install PyCairo
    - Install PyGObject
    - Manually add the paths for these into Anaconda
* Change the Gwyconda environment directory to the bin folder in Gwyddion
:::
:::

## March 2022: Installation procedure
:::{.fragment .fade-in}
### Set up PyCharm
:::{.incremental}
* Open a new project and set the interpreter to Gwyconda 
* Create a python file
* Append the path of the bin folder in Gwyddion
* Ignore all runtime warnings 

* **(Go back to the start because something went wrong in the installation)** 
:::
:::


## FAIR(4RS) Principles
:::{.incremental}
* **F**indable
    + Easy to find, with a unique identifier for each version ❌
    + Metadata (summary info, eg License, Website, coding language) ❌
* **A**ccessible
    + Retrievable using a free and open protocol ✅
    + Metadata are accessible, even when the software is no longer available ❌
* **I**nteroperable
    + Software uses data in a way that meets community standards ✅
    + Software includes references to other objects ❌
* **R**eusable
    + Metadata (how to use) and License ❌
    + Detailled provenance (information on its context, maintainers and dependencies) ❌
:::


## Introducing ✨ TopoStats 2.0 ✨
::: {.notes}
* Understand the entire codebase
* Black box
* Easier bugfixing
* Better documentation
* Citing is easier
:::

## Removing hard-coded variables
:::: {.columns}
::: {.column width="50%"}
* Added config file
* Easy editing of parameters
* No more script editing for users
* Configurations are saved with the outputs for reproducability

:::
::: {.column width="50%"}
![](config.png){width=80%}
:::
::::

:::{.notes}
can use topostats without an IDE
:::

## Documentation
:::: {.columns}
::: {.column width="50%"}
<!-- ![](readthedocs_index.png){} -->
:::{.incremental}
* Documentation now written alongside code as `docstrings`.
* Every function, class and file has one.
* docstrings describe the parameters and return values
* They make the code easier to read
* The documentation is hosted automatically on [ReadTheDocs](https://readthedocs.org/) using the [Sphinx](https://docs.readthedocs.io/en/stable/intro/getting-started-with-sphinx.html) documentation generator.
* Easily searchable online
* Releases automatically submitted to ORDA
:::
:::
::: {.column width="50%"}
![](readthedocs_example.png){}
:::
::::

## Versioning
* Stable versions are released incrementally from GitHub to PyPI, bundling features together

* Allows users to use stable, fully documented versions while we work on developing new features

:::: {.columns}
::: {.column width="50%"}
![](github-release.png){}
:::
::: {.column width="50%"}
![](pypi-release.png){}
:::
::::

# Updated GitHub Page
::::{.columns}
:::{.column width=50%}
![](github-page-top.png){}
:::
:::{.column width=50%}
![](github-page-bottom.png){}
:::
::::

## GitHub Issues and Milestones

* GitHub Issues
    + For planned Features
* GitHub Milestonees
    + For planned releases

![](Milestones.png){width=75%}

## GitHub Issues and Milestones
![](issue.png){width=75%}

:::{.notes}
Open to everyone
Not kept private in meetings and messages
Knock-on-effect of better organisation and insightful planning
:::

## Linting and formatting

Making code universally understandable

* Pylint, Black, Flake8
* Pre-commit

![](pre-commit-ci.png){}
![](pylint.png){}

## Testing, Testing, Testing

::::{.columns}
:::{.column width=40%}
* Ensures code does what it is intended to do
* Flags if code unexpectedly breaks

![](coverage-chart.png){width=50%}
![](coverage.png){}
:::
:::{.column width=60%}
* Uses `pytest` and GitHub Actions
* Catches errors and prevents bad code from being added

![](tests.png){}
:::
::::



## Code review 

* Contribution using GitHub's Pull Requests
* A pull request requires approval from at least one other person on the project before being merged (accepted).
* This prevents bad code from being added to the project

![](review.png){}


## TopoStats 2.0 installation procedure

* ```{.bash}
conda create -n topostats python=3.10
conda activate topostats
pip install topostats
```

* ```{.bash}
run_topostats
```

## One year on
:::{.incremental}
* **F**indable
    + Easy to find, with a unique identifier for each version ✅
    + Metadata (summary info, eg License, Website, coding language) ✅
* **A**ccessible
    + Retrievable using a free and open protocol ✅
    + Metadata are accessible, even when the software is no longer available ✅
* **I**nteroperable
    + Software uses data in a way that meets community standards ✅
    + Software includes references to other objects ✅
* **R**eusable
    + Metadata (how to use) and License ✅
    + Detailled provenance (information on its context, maintainers and dependencies) ✅
:::


## Remaining challenges
:::{.incremental}
* Documentation versioning
* Jupyter notebooks for improved accessibility
* GUI?
* Balancing openness and NDA information from external research partners.
* Balancing internal team meetings with openness on Github.
:::

## Benefits and drawbacks of Open Research / Software
:::: {.columns}
::: {.column width="50%"}
### Benefits
::: {.incremental}
* Collaboration
    + Sharing data, methods, code
    + Faster and efficient progress (but not always!)
* Inclusivity
    + Data and software are free to access
* Greater impact
    + More accessible to a wider audience
* Transparency and constructive criticism
    + Enables and even encourages people to critique methods that are used.
* Reproducablility
    + Others can more easily replicate research
:::
:::
::: {.column width="50%"}
### Drawbacks
:::{.incremental}
* Chaos in open software development
    + As the community grows, so do the feature requests and issues!
    + Competing demands of users, collaborators, work
    + Sporadic nature of working with people with varying availability
    + Relying on open source software can be risky, there are innumerable abandoned packages 
* Navigating work under NDA has been a lot harder
    - Hard to work on features since no example data
    - Cannot document certain things
:::
:::
::::

## Personal experience with Open Research / Software

:::: {.columns}
::: {.column width="50%"}
### Personal benefits
:::{.incremental}
* Communities
    + TopoStats and its related research being open has built a wonderful community that spreads globally and is growing at an increasing rate.
    + For example we have met people from the UK, France, Spain, Germany and America.
* Professional development
    + Open research / development is great for networking and building reputation
    + Easier to advertise oneself as opposed to working on closed-source software and non-open research.
* Social benefit of open research and software.
    + Working on open research / software is viewed positively
:::
:::
::: {.column width="50%"}
### Personal drawbacks
:::{.incremental}
* Stress!
* More scrutiny
* People depend on you
* More time demands
* The systems can be cumbersome
:::
:::
::::

# Acknowledgements

I would like to thank everyone who has worked on and helped with TopoStats. This was a massive group effort. (In alphabetical order)

::::{.columns}
:::{.column width=25%}
* Alice Pyne
* Billie Ward
* Bob Turner
* Eddie Rollins
* Jean Du
* Joe Beton
:::
:::{.column width=25%}
* Libby Holmes
* Max Gamill
* Neil Shephard
* Rob Moorehead
* Tobi Firth
* Tom Catley
:::
:::{.column width=50%}
![](topo-team.png){}
:::
::::